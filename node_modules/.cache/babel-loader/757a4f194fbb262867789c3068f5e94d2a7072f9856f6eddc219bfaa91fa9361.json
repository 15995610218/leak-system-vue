{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyPagination from '@/components/MyPagination.vue';\nimport base from \"@/api/base\";\nimport request from \"@/utils/request\";\nexport default {\n  components: {\n    MyPagination\n  },\n  data() {\n    return {\n      //导入execl事件数据\n      action: 'http://localhost:7080/leak/ksleakimport',\n      mode: {},\n      modeList: [],\n      //导出execl事件数据，\n      exportDate: {\n        beginDate: '',\n        andDate: ''\n      },\n      dialogVisible: false,\n      dialogImportVisible: false,\n      input: '',\n      tableData: [],\n      total: 50,\n      sizePage: 5,\n      currentPage: 1,\n      //搜索栏位数据\n      formInline: {\n        user: '',\n        region: ''\n      },\n      multipleSelection: [],\n      tmpNumber: [],\n      deleteFlag: ''\n    };\n  },\n  methods: {\n    SubmitSelect() {},\n    SubmitInsert() {\n      //跳转添加页面\n      this.$router.push('/kunshan/addksleak');\n    },\n    //导入事件\n    SubmitInport() {},\n    modeUpload(item) {\n      this.mode = item.file;\n    },\n    upload() {\n      let fd = new FormData();\n      fd.append('');\n    },\n    //导出execl事件\n    SubmitExport() {\n      this.ksleakExport(this.exportDate);\n    },\n    SubmitDelete() {\n      for (let i = 0; i < this.multipleSelection.length; i++) {\n        let tmpKsleak = this.multipleSelection[i];\n        this.tmpNumber[i] = tmpKsleak.id;\n      }\n      if (this.tmpNumber.length === 0) {\n        this.$message({\n          type: 'info',\n          message: '请选择要删除的数据！'\n        });\n        return;\n      }\n      this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let res = await this.ksleakDelete(this.tmpNumber);\n        if (res === 200) {\n          this.tmpNumber = [];\n          await this.ksleakRequest(this.currentPage, this.sizePage);\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        } else {\n          this.$message({\n            type: 'warning',\n            message: '删除失败!'\n          });\n        }\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    //    搜索事件\n    onSubmit() {\n      console.log('submit!');\n    },\n    //    分页事件查询数据\n    handleCurrentChange(currentPage) {\n      this.ksleakRequest(currentPage, this.sizePage);\n    },\n    handleSizeChange(sizePage) {\n      this.sizePage = sizePage;\n      this.ksleakRequest(this.currentPage, sizePage);\n    },\n    //操作-编辑事件和删除事件\n    handleEdit(index, row) {\n      this.$router.push({\n        path: '/kunshan/editksleak',\n        query: {\n          index: index,\n          row: row\n        }\n      });\n    },\n    //请求后台数据方法\n    async ksleakRequest(currentPage, sizePage) {\n      await request({\n        methods: 'GET',\n        url: '/leak/ksleak',\n        params: {\n          currentPage,\n          sizePage\n        }\n      }).then(res => {\n        this.tableData = res.data.data.rows;\n        this.total = res.data.data.totalcount;\n      });\n    },\n    //删除数据-后台交互\n    ksleakDelete(ids) {\n      return new Promise(resolve => {\n        request({\n          method: 'POST',\n          url: '/leak/ksleakdelete',\n          data: ids\n        }).then(res => {\n          this.deleteFlag = res.data.state;\n          resolve(this.deleteFlag);\n        });\n      });\n    },\n    //导出execl数据-后台交互\n    async ksleakExport(exportDate) {\n      request({\n        method: 'POST',\n        url: '/leak/ksleakexport',\n        responseType: 'blob',\n        data: exportDate\n      }).then(res => {\n        if (res.headers !== '{}') {\n          //创建空的超链接\n          const link = document.createElement('a');\n          try {\n            // let blob = new Blob([res.data],{type:\"application/vnd.ms-execl\"});\n            //使用blob类型接受导出数据流\n            let blob = res.data;\n            //获取后台返回的文件名\n            let fileName = res.headers['content-disposition'].split(';')[1].split('=')[1];\n            // link.style.display='none';\n            //兼容不同浏览器URL\n            const urls = window.URL || window.webkitURL || window.moxURl;\n            //创建超链接\n            link.href = urls.createObjectURL(blob);\n            //设置超链接属性\n            link.setAttribute('download', fileName.substring(fileName.lastIndexOf('_') + 1));\n            //DOM添加超链接\n            document.body.appendChild(link);\n            //模拟点击事件\n            link.click();\n            //释放DOM\n            document.body.removeChild(link);\n            //释放超链接\n            urls.revokeObjectURL(link.href);\n            //关闭弹框页面\n            this.dialogVisible = false;\n          } catch (e) {\n            this.dialogVisible = false;\n            this.$message.error('下载文件出错:', e);\n          }\n        }\n      }).catch(err => {\n        this.dialogVisible = false;\n        this.$message.error(\"导出文件下载失败！\");\n      });\n    }\n  },\n  created() {\n    this.ksleakRequest(this.currentPage, this.sizePage);\n  }\n};","map":{"version":3,"mappings":";AAqFA;AACA;AACA;AACA;EACAA;IACAC;EACA;EACAC;IACA;MACA;MACAC;MACAC;MACAC;MACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC,gBAEA;IACAC;MACA;MACA;IACA;IACA;IACAC,gBAEA;IACAC;MACA;IACA;IACAC;MACA;MACAC;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;MACA;QACA;UACAC;UACAC;QACA;QACA;MACA;MACA;QACAC;QACAC;QACAH;MACA;QACA;QACA;UACA;UACA;UACA;YACAA;YACAC;UACA;QACA;UACA;YACAD;YACAC;UACA;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IACAG;MACA;IACA;IACA;IACAC;MACAC;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACAC;QACAC;UAAAC;UAAAC;QAAA;MACA;IACA;IACA;IACA;MACA;QACAtB;QACAuB;QACAC;UAAA/B;UAAAD;QAAA;MACA;QACA;QACA;MACA;IACA;IACA;IACAiC;MACA;QACAC;UACAC;UACAJ;UACA3C;QACA;UACA;UACAgD;QACA;MACA;IACA;IACA;IACA;MACAF;QACAC;QACAJ;QACAM;QACAjD;MACA;QACA;UACA;UACA;UACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACAkD;YACA;YACAA;YACA;YACAC;YACA;YACAD;YACA;YACAC;YACA;YACAC;YACA;YACA;UACA;YACA;YACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;EACA;AAEA","names":["components","MyPagination","data","action","mode","modeList","exportDate","beginDate","andDate","dialogVisible","dialogImportVisible","input","tableData","total","sizePage","currentPage","formInline","user","region","multipleSelection","tmpNumber","deleteFlag","methods","SubmitSelect","SubmitInsert","SubmitInport","modeUpload","upload","fd","SubmitExport","SubmitDelete","type","message","confirmButtonText","cancelButtonText","handleSelectionChange","onSubmit","console","handleCurrentChange","handleSizeChange","handleEdit","path","query","index","row","url","params","ksleakDelete","request","method","resolve","responseType","link","document","urls","created"],"sourceRoot":"src/views/kunshan/leakManagement","sources":["leak.vue"],"sourcesContent":["<template>\n<!--        表头位置-->\n    <div class=\"ksleak\">\n        <div class=\"header\">\n            <el-input v-model=\"input\" placeholder=\"请输入内容\"></el-input>\n            <el-button type=\"primary\" @click=\"SubmitSelect\">查询</el-button>\n            <el-button type=\"primary\" @click=\"SubmitInsert\">添加</el-button>\n            <el-button type=\"info\" @click=\"dialogImportVisible = true\">导入</el-button>\n            <el-button type=\"warning\" @click=\"dialogVisible = true\">导出</el-button>\n            <el-button type=\"danger\" @click=\"SubmitDelete\">删除</el-button>\n        </div>\n        <br>\n<!--        内容位置-->\n        <div class=\"warpper\">\n            <el-table :data=\"tableData\" height=\"500\" border style=\"width: 100%\" @selection-change=\"handleSelectionChange\">\n                <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n                <el-table-column label=\"安全团队\" >\n                    <el-table-column prop=\"bugName\" label=\"漏洞名称\" show-overflow-tooltip></el-table-column>\n                    <el-table-column prop=\"releaseDate\" label=\"发现日期\"></el-table-column>\n                    <el-table-column prop=\"threatLevel\" label=\"危险等级\" width=\"50\"></el-table-column>\n                    <el-table-column prop=\"bugInformation\" label=\"漏洞描述\" show-overflow-tooltip></el-table-column>\n                </el-table-column>\n                <el-table-column label=\"处置团队\" >\n                    <el-table-column prop=\"systemName\" label=\"系统名称\" show-overflow-tooltip></el-table-column>\n                    <el-table-column prop=\"processPerson\" label=\"负责人\" width=\"70\"></el-table-column>\n                    <el-table-column prop=\"processPlan\" label=\"处置方式\" show-overflow-tooltip></el-table-column>\n                    <el-table-column prop=\"processDate\" label=\"处置时间\"></el-table-column>\n                    <el-table-column prop=\"processResult\" label=\"处置结果\" show-overflow-tooltip></el-table-column>\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"50\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                                size=\"mini\"\n                                type=\"primary\"\n                                icon=\"el-icon-edit\"\n                                circle\n                                @click=\"handleEdit(scope.$index, scope.row)\"></el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n<!--            导出数据到execl-->\n            <el-dialog\n                    title=\"导出数据\"\n                    :visible.sync=\"dialogVisible\"\n                    width=\"50%\">\n                <el-form ref=\"exportDate\" :model=\"exportDate\" label-width=\"80px\">\n                    <el-row>\n                        <el-col :span=\"8\">\n                            <el-form-item label=\"开始时间\" prop=\"beginDate\">\n                                <el-date-picker value-format=\"yyyy-MM-dd\" type=\"date\" placeholder=\"选择日期\" v-model=\"exportDate.beginDate\" style=\"width: 100%;\"></el-date-picker>\n                            </el-form-item>\n                        </el-col>\n                        <el-col :span=\"8\">\n                            <el-form-item label=\"结束时间\" prop=\"andDate\">\n                                <el-date-picker value-format=\"yyyy-MM-dd\" type=\"date\" placeholder=\"选择日期\" v-model=\"exportDate.andDate\" style=\"width: 100%;\"></el-date-picker>\n                            </el-form-item>\n                        </el-col>\n                    </el-row>\n                    <el-form-item>\n                        <el-button type=\"primary\" @click=\"SubmitExport\">提交</el-button>\n                        <el-button @click=\"dialogVisible = false\">取消</el-button>\n                    </el-form-item>\n                </el-form>\n            </el-dialog>\n<!--            导入execl到数据库-->\n            <el-dialog\n                    title=\"导入数据\"\n                    :visible.sync=\"dialogImportVisible\"\n                    width=\"50%\">\n                <el-upload\n                    :action=\"action\"\n                    :file-list=\"modeList\"\n                    :http-request=\"modeUpload\">\n                    <el-button size=\"small\" type=\"primary\">上传</el-button>\n                </el-upload>\n                <el-button @click=\"upload\">点击上传文件</el-button>\n            </el-dialog>\n        </div>\n<!--        分页位置    -->\n        <div>\n            <MyPagination :total=\"total\" :pageSize=\"sizePage\" @handleCurrentChange=\"handleCurrentChange\" @handleSizeChange=\"handleSizeChange\"/>\n        </div>\n    </div>\n</template>\n<script>\n    import MyPagination from '@/components/MyPagination.vue'\n    import base from \"@/api/base\"\n    import request from \"@/utils/request\"\n    export default {\n        components:{\n            MyPagination\n        },\n        data(){\n            return{\n                //导入execl事件数据\n                action:'http://localhost:7080/leak/ksleakimport',\n                mode:{},\n                modeList:[],\n                //导出execl事件数据，\n                exportDate:{\n                    beginDate:'',\n                    andDate:''\n                },\n                dialogVisible:false,\n                dialogImportVisible:false,\n                input:'',\n                tableData:[],\n                total:50,\n                sizePage:5,\n                currentPage:1,\n                //搜索栏位数据\n                formInline: {\n                    user: '',\n                    region: ''\n                },\n                multipleSelection:[],\n                tmpNumber:[],\n                deleteFlag:''\n            }\n        },\n        methods:{\n            SubmitSelect(){\n\n            },\n            SubmitInsert(){\n                //跳转添加页面\n                this.$router.push('/kunshan/addksleak');\n            },\n            //导入事件\n            SubmitInport(){\n\n            },\n            modeUpload(item){\n                this.mode = item.file;\n            },\n            upload(){\n                let fd = new FormData();\n                fd.append('')\n            },\n            //导出execl事件\n            SubmitExport(){\n                this.ksleakExport(this.exportDate);\n            },\n             SubmitDelete(){\n                for (let i = 0;i < this.multipleSelection.length;i++){\n                    let tmpKsleak = this.multipleSelection[i];\n                    this.tmpNumber[i] = tmpKsleak.id;\n                }\n                if (this.tmpNumber.length === 0){\n                    this.$message({\n                        type: 'info',\n                        message: '请选择要删除的数据！'\n                    });\n                    return;\n                }\n                this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(async () => {\n                    let res = await this.ksleakDelete(this.tmpNumber);\n                    if (res === 200){\n                        this.tmpNumber = [];\n                        await this.ksleakRequest(this.currentPage, this.sizePage);\n                        this.$message({\n                            type: 'success',\n                            message: '删除成功!'\n                        });\n                    }else {\n                        this.$message({\n                            type: 'warning',\n                            message: '删除失败!'\n                        });\n                    }\n                }).catch(() => {\n                    this.$message({\n                        type: 'info',\n                        message: '已取消删除'\n                    });\n                });\n            },\n            handleSelectionChange(val){\n                this.multipleSelection = val;\n            },\n        //    搜索事件\n            onSubmit() {\n                console.log('submit!');\n            },\n        //    分页事件查询数据\n            handleCurrentChange(currentPage){\n                this.ksleakRequest(currentPage,this.sizePage);\n            },\n            handleSizeChange(sizePage){\n                this.sizePage = sizePage;\n                this.ksleakRequest(this.currentPage,sizePage);\n            },\n            //操作-编辑事件和删除事件\n            handleEdit(index,row){\n                this.$router.push({\n                    path:'/kunshan/editksleak',\n                    query:{index:index,row:row}\n                });\n            },\n            //请求后台数据方法\n            async ksleakRequest(currentPage,sizePage){\n                await request({\n                    methods: 'GET',\n                    url:'/leak/ksleak',\n                    params:{currentPage,sizePage}\n                }).then(res => {\n                    this.tableData = res.data.data.rows;\n                    this.total = res.data.data.totalcount;\n                })\n            },\n            //删除数据-后台交互\n            ksleakDelete(ids){\n                 return new Promise(resolve => {\n                     request({\n                         method:'POST',\n                         url:'/leak/ksleakdelete',\n                         data: ids\n                     }).then(res => {\n                         this.deleteFlag = res.data.state;\n                         resolve(this.deleteFlag)\n                     })\n                 })\n            },\n            //导出execl数据-后台交互\n            async ksleakExport(exportDate){\n                request({\n                    method:'POST',\n                    url:'/leak/ksleakexport',\n                    responseType:'blob',\n                    data:exportDate\n                }).then(res => {\n                    if (res.headers !== '{}'){\n                        //创建空的超链接\n                        const link=document.createElement('a');\n                        try {\n                            // let blob = new Blob([res.data],{type:\"application/vnd.ms-execl\"});\n                            //使用blob类型接受导出数据流\n                            let blob = res.data;\n                            //获取后台返回的文件名\n                            let fileName = res.headers['content-disposition'].split(';')[1].split('=')[1];\n                            // link.style.display='none';\n                            //兼容不同浏览器URL\n                            const urls = window.URL || window.webkitURL || window.moxURl;\n                            //创建超链接\n                            link.href=urls.createObjectURL(blob);\n                            //设置超链接属性\n                            link.setAttribute('download',fileName.substring(fileName.lastIndexOf('_')+1));\n                            //DOM添加超链接\n                            document.body.appendChild(link);\n                            //模拟点击事件\n                            link.click();\n                            //释放DOM\n                            document.body.removeChild(link);\n                            //释放超链接\n                            urls.revokeObjectURL(link.href);\n                            //关闭弹框页面\n                            this.dialogVisible=false;\n                        }catch (e){\n                            this.dialogVisible=false;\n                            this.$message.error('下载文件出错:',e);\n                        }\n                    }\n                }).catch(err =>{\n                    this.dialogVisible=false;\n                    this.$message.error(\"导出文件下载失败！\");\n                })\n            }\n        },\n        created(){\n            this.ksleakRequest(this.currentPage,this.sizePage);\n        }\n\n    }\n\n</script>\n\n<style lang=\"less\" scoped>\n    .ksleak{\n        margin: 20px;\n    }\n    .header{\n        display: flex;\n    }\n    .header button{\n        margin-left: 20px;\n    }\n    .el-table-column{\n        text-align: center;\n    }\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}