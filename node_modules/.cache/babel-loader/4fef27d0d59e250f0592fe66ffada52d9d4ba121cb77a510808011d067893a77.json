{"ast":null,"code":"/**\n * 封装后台交互方法\n */\nimport axios from \"axios\";\nimport baseUrl from \"@/utils/baseURL\";\nimport { Message } from \"element-ui\";\nimport store from \"@/store\";\nconst http = {};\nvar instance = axios.create({\n  baseURL: baseUrl,\n  timeout: 5000\n});\n\n//请求拦截器\ninstance.interceptors.request.use(config => {\n  if (store.state.UserToken) {\n    console.log(\"usertoke=====\" + store.state.UserToken);\n    config.headers.token = store.state.UserToken;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n//响应拦截器\ninstance.interceptors.response.use(response => {\n  return response.data;\n}, err => {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        err.message = '请求出错';\n        break;\n      case 401:\n        Message.warning({\n          message: '授权失败，请重新登陆'\n        });\n        store.commit('LOGIN_OUT');\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n        return;\n      case 403:\n        err.message = '拒绝访问';\n        break;\n      case 404:\n        err.message = '请求错误,未找到该资源';\n        break;\n      case 500:\n        err.message = '服务器端错误';\n        break;\n    }\n  } else {\n    err.message = '连接服务失败';\n  }\n  Message.error({\n    message: err.message\n  });\n  return Promise.reject(err.response);\n});\nhttp.get = function (url, options) {\n  return new Promise((resolve, reject) => {\n    instance.get(url, options).then(response => {\n      if (response.state === 200) {\n        resolve(response.data);\n      } else {\n        Message.error({\n          message: response.message\n        });\n      }\n    }).catch(e => {\n      //console.log(e)\n    });\n  });\n};\nhttp.post = function (url, data, options) {\n  return new Promise((resolve, reject) => {\n    instance.post(url, data, options).then(response => {\n      if (response.state === 200) {\n        resolve(response);\n      } else {\n        Message.error({\n          message: response.message\n        });\n        reject(response.message);\n      }\n    });\n  }).catch(e => {\n    console.log(e);\n    Message.error(e.message);\n  });\n};\nexport default http;","map":{"version":3,"names":["axios","baseUrl","Message","store","http","instance","create","baseURL","timeout","interceptors","request","use","config","state","UserToken","console","log","headers","token","error","Promise","reject","response","data","err","status","message","warning","commit","setTimeout","window","location","reload","get","url","options","resolve","then","catch","e","post"],"sources":["/Users/hailongwei/Nodejs/vuepreject/vuedemo20221202/src/utils/http.js"],"sourcesContent":["/**\n * 封装后台交互方法\n */\nimport axios from \"axios\";\nimport baseUrl from \"@/utils/baseURL\";\nimport {Message} from \"element-ui\";\nimport store from \"@/store\";\n\nconst http = {}\n\nvar instance = axios.create({\n    baseURL:baseUrl,\n    timeout:5000\n})\n\n//请求拦截器\ninstance.interceptors.request.use(\n    (config) => {\n        if (store.state.UserToken){\n            console.log(\"usertoke=====\"+store.state.UserToken);\n            config.headers.token = store.state.UserToken;\n        }\n        return config;\n    },(error) =>{\n        return Promise.reject(error);\n    }\n)\n\n//响应拦截器\ninstance.interceptors.response.use(\n    response =>{\n       return response.data\n    },\n    err =>{\n        if (err && err.response){\n            switch (err.response.status){\n                case 400:\n                    err.message='请求出错'\n                    break\n                case 401:\n                    Message.warning({\n                        message:'授权失败，请重新登陆'\n                    })\n                    store.commit('LOGIN_OUT')\n                    setTimeout(() =>{\n                        window.location.reload()\n                    },1000)\n                    return\n                case 403:\n                    err.message='拒绝访问'\n                    break\n                case 404:\n                    err.message='请求错误,未找到该资源'\n                    break\n                case 500:\n                    err.message='服务器端错误'\n                    break\n            }\n        }else {\n            err.message='连接服务失败'\n        }\n        Message.error({\n            message:err.message\n        })\n        return Promise.reject(err.response)\n    }\n)\n\nhttp.get = function (url,options){\n    return new Promise((resolve,reject)=>{\n        instance.get(url,options).then(response => {\n            if (response.state === 200){\n                resolve(response.data)\n            }else {\n                Message.error({\n                    message:response.message\n                })\n            }\n        }).catch(e =>{\n            //console.log(e)\n        })\n    })\n}\n\nhttp.post = function (url,data,options){\n    return new Promise((resolve,reject) =>{\n        instance.post(url,data,options).then(response =>{\n                if (response.state === 200){\n                    resolve(response)\n                }else {\n                    Message.error({\n                        message: response.message\n                    })\n                    reject(response.message);\n                }\n            }\n        )\n    }).catch(e=>{\n        console.log(e)\n        Message.error(e.message)\n    })\n}\n\nexport default http\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}